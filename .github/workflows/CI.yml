name: Java CI with Gradle

on:
  pull_request:
    branches: ["main", "develop"]
  workflow_dispatch:

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "corretto"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: DB config
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3307
          container port: 3306
          mysql database: "stop"
          mysql root password: ${{ secrets.DB_SECRET }}

#      - name: Start Redis
#        uses: supercharge/redis-github-action@1.7.0
#        with:
#          redis-version: "7.2.5"
#          redis-port: 6379
      - name: set Config
        run: |
          echo "${{ secrets.OAUTH_YML }}" | base64 --decode > src/main/resources/application-oauth.yml
          echo "${{ secrets.MINIO_YML }}" | base64 --decode > src/main/resources/application-minio.yml
          echo "${{ secrets.NOTION_YML }}" | base64 --decode > src/main/resources/application-notion.yml
          echo "${{ secrets.EMAIL_YML }}" | base64 --decode > src/main/resources/application-email.yml
          echo "${{ secrets.COMMON_YML }}" | base64 --decode > src/main/resources/application-common.yml
          find src

      - name: gradlew 권한 부여
        run: chmod +x gradlew
        
      - name: Build with Gradle Wrapper
        run: ./gradlew build

#      - name: jacocoTestCoverage
#        id: jacoco
#        uses: madrapps/jacoco-report@v1.5
#        with:
#          title: 📝 Jacoco Test Coverage
#          paths: ${{ github.workspace }}/**/build/reports/jacoco/test/jacocoTestReport.xml
#          token: ${{ secrets.ACTION_TOKEN }}
#          min-coverage-overall: 50
#          min-coverage-changed-files: 50
#          update-comment: true
      - name: Publish Test Results
        uses: mikepenz/action-junit-report@v4.3.1
        if: success() || failure()
        with:
          report_paths: '**/build/test-results/**/*.xml'
          token: ${{secrets.JUNIT_TOKEN}}
